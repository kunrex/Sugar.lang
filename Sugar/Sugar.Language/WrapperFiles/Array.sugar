class Array<T> 
{
    [private] array<T> value;
    
    [public] int Length { get => value.Length; }
    [public] bool: Empty { get => value.Length == 0; }
    
    [public]
    constructor Array(int: length)
    {
        value = create array<T>(length);
    }
    
    [public]
    indexer T[int: index] 
    {
        get => value[index];
        set => value[index] = value;
    } 
    
    void Clear()
    {
        array = create array<T>(0);
    }
    
    array<T> Clone() 
    {
        arr: array<T> = create array<T>(value.Length);
        for(int: i = 0; i < value.Length; i++)
            arr[i] = value[i];
            
         return arr;
    }
   
    bool FindIndex(T search)
    {
        for(int: i = 0; i < value.Length; i++)
            if(value[i] == search)
                return i;
                
        return -1;
    } 
    
    bool Contains(T search)
    {
        forech(T: val in value)
            if(val == search)
                return true;
                
        return false;
    }
}
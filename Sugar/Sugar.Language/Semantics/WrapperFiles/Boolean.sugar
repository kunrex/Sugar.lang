
namespace Sugar
{
    struct Boolean
    {
        [private] bool: value;

        [public]
        constructor Boolean()
        {
            value = false;
        }

        [public]
        constructor Boolean(bool: defaultValue)
        {
            value = defaultValue;
        }

        [public]
        constructor Boolean(int: defaultValue)
        {
            value = defaultValue == 0 ? true : false;
        }

        [public, static]
        implicit bool(Boolean: value) => value.value;

        [public, static]
        implicit Boolean(bool: value) => create Boolean(value);

        [public, static]
        implicit Boolean(int: value) => create Boolean(value);

        [public, static]
        explicit char(bool: value) => value ? 0 as char : 1 as char;

        [public, static]
        explicit byte(bool: value) => value as byte;

        [public, static]
        explicit sbyte(bool: value) => value as sbyte;

        [public, static]
        explicit short(bool: value) => value as short;

        [public, static]
        explicit ushort(bool: value) => value as ushort;

        [public, static]
        explicit int(bool: value) => value as int;

        [public, static]
        explicit uint(bool: value) => value as uint;

        [public, static]
        explicit long(bool: value) => value as long;

        [public, static]
        explicit ulong(bool: value) => value as ulong;

        [public, static]
        explicit string(bool: value) => value.ToString();

        [public]
        string ToString() => value ? "true" : "false";
    }
}
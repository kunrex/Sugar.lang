struct Float
{
    [private] float: value;

    [public]
    constructor Float()
    {
        value = 0;
    }

    [public]
    constructor Float(float: c)
    {
        value = c;
    }

    [public, static]
    implicit float(Float: i) => i.value;

    [public, static]
    implicit Float(float: i) => create Float(i);

    [public, static]
    implicit byte(Float: i) => i.value as byte;

    [public, static]
    implicit sbyte(Float: i) => i.value as sbyte;

    [public, static]
    implicit short(Float: i) => i.value as short;

    [public, static]
    implicit ushort(Float: i) => i.value as ushort;

    [public, static]
    implicit int(Float: i) => i.value as int;

    [public, static]
    implicit uint(Float: i) => i.value as uint;

    [public, static]
    implicit long(Float: i) => i.value as long;

    [public, static]
    implicit ulong(Float: i) => i.value as ulong;

    [public, static]
    implicit double(Float: i) => i.value as double;

    [public, static]
    implicit decimal(Float: i) => i.value as decimal;

    [public]
    string ToString() => value + "";

    [public, static]
    operator float +(Float: a, Float: b) => a.value + b.value;

    [public, static]
    operator float -(Float: a, Float: b) => a.value - b.value;

    [public, static]
    operator float *(Float: a, Float: b) => a.value * b.value;

    [public, static]
    operator float /(Float: a, Float: b) => a.value / b.value;

    [public, static]
    operator float %(Float: a, Float: b) => a.value % b.value;

    [public, static]
    operator float ++(Float: a) => a++;

    [public, static]
    operator float --(Float: a) => a--;

    [public, static]
    operator float -(Float: a) => -a;

    [public, static]
    operator bool ==(Float: a, Float: b) => a.value == b.value;

    [public, static]
    operator bool !=(Float: a, Float: b) => a.value != b.value;

    [public, static]
    operator bool >=(Float: a, Float: b) => a.value >= b.value;

    [public, static]
    operator bool <=(Float: a, Float: b) => a.value <= b.value;

    [public, static]
    operator bool <(Float: a, Float: b) => a.value < b.value;

    [public, static]
    operator bool >(Float: a, Float: b) => a.value > b.value;

    [public, static]
    operator float +(Float: a) => +a.value; 
}